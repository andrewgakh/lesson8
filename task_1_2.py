import time
import psutil
import os

#***********************************************************************************************************************
# Задача 1.
# Написать декоратор, замеряющий время выполнение декорируемой функции.
#***********************************************************************************************************************


def delta_time(ff):     # Декоратор измеряющий затраченное время на выполнение функции f.

    def wrapped(*args, **kwargs):
        time_start = time.time()
        ff(*args, **kwargs)
        time_finish = time.time()
        delta_time = time_finish - time_start
        print('Время выполнения :', delta_time, ' c')
    return wrapped

@delta_time
@delta_mem
def my_add(x,y):
    for i in range(10000000):
        k = 0
    return  print('Сумма равна',x+y)

print()
print('Задача 1.')
print()
my_add(100,300)

#***********************************************************************************************************************
# Задача 2.
# Сравнить время создания генератора и списка с элементами:
# натуральные числа от 1 до 1000000 (создание объектов оформить в виде функций).
#***********************************************************************************************************************

@delta_time
def cr_list(x):

    x_list = [i**2  for i in range(1, x + 1) ]
    return x_list

@delta_time
def cr_gen(x):
    for i in range(1, x+1):
        y = i**2
        yield y

print()
print('Задача 2.')
num = 1000000

print('Создание листа c элементами ')
cr_list(num)

print()
print('Создание генератора ')
cr_gen(num)
